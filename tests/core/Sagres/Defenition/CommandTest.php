<?php
namespace Sagres\Defenition;
use Sagres\Defenition\Execute;


/**
 * Test class for Command.
 * Generated by PHPUnit on 2012-03-02 at 17:24:14.
 */
class CommandTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Command
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Command;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Sagres\Defenition\Command::getName
     * @covers Sagres\Defenition\Command::setName
     */
    public function testSetGetName()
    {
        $this->object->setName('foo');
        $this->assertEquals('foo', $this->object->getName());
    }

    /**
     * @covers Sagres\Defenition\Command::getSummary
     * @covers Sagres\Defenition\Command::setSummary
     */
    public function testSetGetSummary()
    {
       $this->object->setSummary('foo');
       $this->assertEquals('foo', $this->object->getSummary());
    }

    /**
     * @covers Sagres\Defenition\Command::getExecutes
     * @covers Sagres\Defenition\Command::addExecute
     */
    public function testAddGetExecutes()
    {
        $e1 = new Execute();
        $e2 = new Execute();
        $this->object->addExecute($e1);
        $this->object->addExecute($e2);

        $ret = array($e1, $e2);

        $this->assertEquals($ret, $this->object->getExecutes());
    }
}
?>
