<?php
namespace Sagres\Configuration;
use Sagres\Configuration\ConfigurationStore;
use Symfony\Component\Yaml\Yaml;

/**
 * Test class for ConfigurationFactory.
 * Generated by PHPUnit on 2012-02-27 at 13:36:40.
 */
class ConfigurationFactoryTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ConfigurationFactory
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {

        $this->object = new ConfigurationFactory;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Sagres\Configuration\ConfigurationFactory::getFiles
     */
    public function testGetFiles()
    {
        $files = array(1,2,3);
        $cf = new ConfigurationFactory($files);

        $this->assertSame($cf->getFiles(), $files);
    }

    /**
     * @covers Sagres\Configuration\ConfigurationFactory::getLoader
     */
    public function testGetLoader()
    {
        $store = new ConfigurationStore(array());
        $loader = new YamlConfigurationReader($store);
        $cf = new ConfigurationFactory(null, $loader);

        $this->assertSame($cf->getLoader(), $loader);
    }

    /**
     * @covers Sagres\Configuration\ConfigurationFactory::getInstance
     * @covers Sagres\Configuration\ConfigurationFactory::load
     */
    public function testGetInstance()
    {
        $files = array(__DIR__ . '/../../../fixtures/empty.file');
        $store = new ConfigurationStore(array());
        $loader = new YamlConfigurationReader($store, new Yaml());
        $cf = new ConfigurationFactory($files, $loader);
        $this->assertSame($cf->getInstance(), $store);
    }

    /**
     * @covers Sagres\Configuration\ConfigurationFactory::getInstance
     * @expectedException Sagres\Exception\NotFound
     */
    public function testGetInstance_fileNotFound()
    {
        $files = array(__DIR__ . '/../../../fixtures/noexistent.file');
        $store = new ConfigurationStore(array());
        $loader = new YamlConfigurationReader($store, new Yaml());
        $cf = new ConfigurationFactory($files, $loader);
        $cf::$instance = null;
        $cf->getInstance($files);
    }
}
?>
