<?php
namespace Sagres\Framework\FileSystem;



/**
 * Test class for Set.
 * Generated by PHPUnit on 2012-03-06 at 11:14:09.
 */
class SetTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Set
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Set;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Sagres\Framework\FileSystem\Set::getStringSeparator
     * @covers Sagres\Framework\FileSystem\Set::setStringSeparator
     */
    public function testSetGetStringSeparator()
    {
        $this->object->setStringSeparator('foo');
        $this->assertEquals('foo', $this->object->getStringSeparator());
    }


    /**
     * @covers Sagres\Framework\FileSystem\Set::addPath
     */
    public function testAddPath()
    {
        $this->object->addPath('foo');
        $this->assertEquals(array('foo'), $this->object->toArray());
    }

    /**
     * @covers Sagres\Framework\FileSystem\Set::addSet
     */
    public function testAddSet_all()
    {
        $this->object->addSet(__DIR__ . '/../../../../fixtures/folder1');

        $this->assertEquals(3, count($this->object->toArray()));

        $this->object->addPath('foo');
        $this->assertEquals(4, count($this->object->toArray()));
    }
    /**
     * @covers Sagres\Framework\FileSystem\Set::addSetRecursive
     */
    public function testAddSetRecursive_all()
    {
        $this->object->addSetRecursive(__DIR__ . '/../../../../fixtures/folder1');

        $this->assertEquals(4, count($this->object->toArray()));

    }

    /**
     * @covers Sagres\Framework\FileSystem\Set::addSet
     */
    public function testAddSet_dotTxt()
    {
        $this->object->addSet(__DIR__ . '/../../../../fixtures/folder1', '*.txt');

        $this->assertEquals(2, count($this->object->toArray()));

    }

    /**
     * @covers Sagres\Framework\FileSystem\Set::toArray
     */
    public function testToArray()
    {
          $this->object->addPath('foo1');
          $this->object->addPath('foo2');
          $this->assertEquals(array('foo1', 'foo2'), $this->object->toArray());
    }

    /**
     * @covers Sagres\Framework\FileSystem\Set::__toString
     */
    public function test__toString()
    {
          $this->object->addPath('foo1');
          $this->object->addPath('foo2');
          $this->assertEquals('foo1 foo2', $this->object);
    }

}
?>
