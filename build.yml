#settings:
#  ClassLoader:
#    myNamespace: /blablabla #relative paths are relative to sagres build file
#
#imports:
#  - path1.yml
#  - path2.yml
#  - path3.yml
#        
parameters:
  config.folder.destination: config/templates 
  config.folder.templates: config
  
services:
  config.files.template:
      desc: fileset representing the configuration files templates
      class: Sagres\Framework\File\Set
      calls:
        - [addSet, [%config.folder.templates%, '*.yml']]
  
  config.files.destination:
      desc: fileset representing the configuration files final destination
      class: Sagres\Framework\File\Set
      calls:
        - [addSet, [%config.folder.destination%, '*.yml']]

  config.copy:
    desc: copy files
    class: Sagres\Framework\File\Action
    arguments: [@config.files.template]
    public: false
    calls:
        - [ copyTo, [%config.files.destination.folder%] ]
  
  config.transform:
    class: Sagres\Framework\File\Action
    arguments: [@config.files.destination]
    public: false
    calls:
        - [ replaceContentsWithParameters, [] ]
      
  test.class:
    class: Sagres\Framework\File\Action  
    arguments: [%config.folder.destination%]
  
commands:

  config:
    desc: generates configuration files and populates them based on the configuration parameters defined on this file
    execute:
      - step: test.class
    
  
  build:
    desc: builds the system
    execute:
      - command: config
      - step: test.class
      
